# ---------------------------------- Cluster -----------------------------------
cluster.name: {{ cluster_name }}
# ------------------------------------ Node ------------------------------------
node.name: {{ ansible_nodename }}
# node.rack: r1
# ----------------------------------- Paths ------------------------------------
# Path to directory where to store the data (separate multiple locations by comma):
#
# path.data: /path/to/data
path.data: /var/lib/elasticsearch
#
# Path to log files:
#
#
# Path to log files:
#
# path.logs: /path/to/logs
#path.logs: /var/lib/elasticsearch/logs/
path.logs: /var/log/elasticsearch/

# ----------------------------------- Memory -----------------------------------
#
# Lock the memory on startup:
#
bootstrap.memory_lock: false
#
# Make sure that the `ES_HEAP_SIZE` environment variable is set to about half the memory
# available on the system and that the owner of the process is allowed to use this limit.
#
# Elasticsearch performs poorly when the system is swapping the memory.
#
# ---------------------------------- Network -----------------------------------
#
# Set the bind address to a specific IP (IPv4 or IPv6):
network.host: [127.0.0.1, {{ ansible_host }}]
# Set a custom port for HTTP:

http.port: {{ elastic_port }}
# --------------------------------- Discovery ----------------------------------
#
# Pass an initial list of hosts to perform discovery when new node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]
#
{% set IP_ARR=[] %}
{% for host in groups['elastic-logstash'] %}
{%   if IP_ARR.extend([hostvars[host]['ansible_host'] | string]) %}
{%   endif %}
{% endfor %}
{% set available_nodes = (groups['elastic-logstash'][:master_node_count] | length) %}
{# Master node count is determined following upstream recommendations #}
{% set master_node_count = (available_nodes > 1) | ternary(((available_nodes / 2) + 1), 1) %}
discovery.zen.ping.unicast.hosts: {{ IP_ARR }}
discovery.zen.minimum_master_nodes: {{ master_node_count }}
{# The first set of nodes in the master_node_count are marked as such #}
node.master: {{ (inventory_hostname in groups['elastic-logstash'][:master_node_count]) | ternary(true, false) }}
{# Every node in the master list and every other node after will be a data node #}
node.data: {{ (inventory_hostname in (groups['elastic-logstash'][:master_node_count] + groups['elastic-logstash'][master_node_count::2])) | ternary(true, false) }}
#
# Prevent the "split brain" by configuring the majority of nodes (total number of nodes / 2 + 1):
#
# discovery.zen.minimum_master_nodes: 3
#
# For more information, see the documentation at:
# <http://www.elastic.co/guide/en/elasticsearch/reference/current/modules-discovery.html>
#
# ---------------------------------- Gateway -----------------------------------
#
# Block initial recovery after a full cluster restart until N nodes are started:
#
# gateway.recover_after_nodes: 3
#
# For more information, see the documentation at:
# <http://www.elastic.co/guide/en/elasticsearch/reference/current/modules-gateway.html>
#
# ---------------------------------- Various -----------------------------------
#
# Disable starting multiple nodes on a single system:
#
# node.max_local_storage_nodes: 1
#
# Require explicit names when deleting indices:
#
# action.destructive_requires_name: true
